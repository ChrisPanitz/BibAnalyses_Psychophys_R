?geom_text()
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 28), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 28), label = "Mean") +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 27, yend = 27), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.10,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 28), color = "darkred", size = 2) +
geom_text(aes(x = 1967, y = 28), label = "Mean") +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 27, yend = 27), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.10,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 28), color = "darkred", size = 2) +
geom_text(aes(x = 1966, y = 28), label = "Mean") +
geom_text(aes(x = 1966, y = 27), label = "Median") +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 27, yend = 27), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.10,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 28), color = "darkred", size = 2) +
geom_text(aes(x = 1967, y = 28), label = "Mean", hjust = 0) +
geom_text(aes(x = 1967, y = 27), label = "Median", hjust = 0) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 27, yend = 27), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.10,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 28), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 28), label = "Mean", hjust = 0) +
geom_text(aes(x = 1965, y = 27), label = "Median", hjust = 0) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 27, yend = 27), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.10,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 28), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 28), label = "Mean", hjust = 0, vjust = 0.5) +
geom_text(aes(x = 1965, y = 27), label = "Median", hjust = 0, vjust = 0.5) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 27, yend = 27), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.10,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 28), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 28), label = "Mean", hjust = 0, vjust = 0) +
geom_text(aes(x = 1965, y = 27), label = "Median", hjust = 0, vjust = 0) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 27, yend = 27), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.10,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 28), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 28), label = "Mean", hjust = 0, vjust = 1) +
geom_text(aes(x = 1965, y = 27), label = "Median", hjust = 0, vjust = 1) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 27, yend = 27), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.10,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 29), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 29), label = "Mean", hjust = 0, vjust = 0.5) +
geom_text(aes(x = 1965, y = 28), label = "Median", hjust = 0, vjust = 0.5) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 28, yend = 28), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.10,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
# save the plot
ggsave(paste0(parentFolder, "/plots/TeamSize.pdf"), teamsizePlot,
width = 30, height = 20, units = "cm")
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 29), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 29), label = "Mean", hjust = 0, vjust = 0.5) +
geom_text(aes(x = 1965, y = 28), label = "Median", hjust = 0, vjust = 0.5) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 28, yend = 28), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.20,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
# save the plot
ggsave(paste0(parentFolder, "/plots/TeamSize.pdf"), teamsizePlot,
width = 30, height = 20, units = "cm")
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 29), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 29), label = "Mean", hjust = 0, vjust = 0.5) +
geom_text(aes(x = 1965, y = 28), label = "Median", hjust = 0, vjust = 0.5) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 28, yend = 28), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.15,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
# save the plot
ggsave(paste0(parentFolder, "/plots/TeamSize.pdf"), teamsizePlot,
width = 30, height = 20, units = "cm")
teamsizePlot <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
geom_count(color = "black", alpha = .20) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred", size = 2) +
geom_vline(xintercept = 1962) +
geom_rect(xmin = 1961, xmax = 1963, ymin = 27, ymax = 28, fill = "white") +
geom_segment(x = 1961, xend = 1963, y = 26.75, yend = 27.25) +
geom_segment(x = 1961, xend = 1963, y = 27.75, yend = 28.25) +
geom_point(aes(x = 1964, y = 29), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 29), label = "Mean", hjust = 0, vjust = 0.5) +
geom_text(aes(x = 1965, y = 28), label = "Median", hjust = 0, vjust = 0.5) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 28, yend = 28), color = "darkblue", linewidth = 1) +
scale_x_continuous(name = "Year", breaks = seq(1970,2020,10), expand = c(0,0)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), minor_breaks = 0:30, labels = c(0,5,10,15,20,25,83), name = "Number of Authors", expand = c(0,0,0,2)) +
coord_cartesian(clip = 'off') +
labs(size = "# publications:") +
theme_classic() +
theme(legend.position = c(0.16,0.97),
legend.direction = "horizontal",
#legend.box.background = element_rect(linewidth = 1, color = "black"),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.line.y = element_blank()); teamsizePlot
# save the plot
ggsave(paste0(parentFolder, "/plots/TeamSize.pdf"), teamsizePlot,
width = 30, height = 20, units = "cm")
teamsizePlot_onlyMMd
teamsizePlot_onlyMMd <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred") +
geom_point(aes(x = 1964, y = 5), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 5), label = "Mean", hjust = 0, vjust = 0.5) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 4.8, yend = 4.8), color = "darkblue", linewidth = 1) +
geom_text(aes(x = 1965, y = 4.8), label = "Median", hjust = 0, vjust = 0.5) +
scale_x_continuous(name = "Year of Publication", breaks = seq(1970,2020,10)) +
scale_y_continuous(breaks = 2:5, minor_breaks = seq(2,5,0.1), name = "Number of Authors") +
theme_classic(); teamsizePlot_onlyMMd
teamsizePlot_onlyMMd <- ggplot(data = dfOutlierCapped, aes(x = PY, group = PY, y = nrAuthors)) +
stat_summary(aes(x = PY, y = nrAuthors), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = PY, y = nrAuthors), geom = "point", fun = "mean", color = "darkred") +
geom_point(aes(x = 1964, y = 5), color = "darkred", size = 2) +
geom_text(aes(x = 1965, y = 5), label = "Mean", hjust = 0, vjust = 0.5) +
geom_segment(aes(x = 1963.5, xend = 1964.5, y = 4.9, yend = 4.9), color = "darkblue", linewidth = 1) +
geom_text(aes(x = 1965, y = 4.9), label = "Median", hjust = 0, vjust = 0.5) +
scale_x_continuous(name = "Year of Publication", breaks = seq(1970,2020,10)) +
scale_y_continuous(breaks = 2:5, minor_breaks = seq(2,5,0.1), name = "Number of Authors") +
theme_classic(); teamsizePlot_onlyMMd
ggsave(paste0(parentFolder, "/plots/TeamSize_onlyMMd.pdf"), teamsizePlot_onlyMMd,
width = 20, height = 20, units = "cm")
# extract country affiliations of authors
df <- metaTagExtraction(df, Field = "AU_CO")
df$nrCountries <- lengths(lapply(str_split(df$AU_CO, ";"), FUN = unique))
meanNrCountries <- aggregate(nrCountries ~ PY, data = df, FUN = "mean")
mdNrCountries <- aggregate(nrCountries ~ PY, data = df, FUN = "median")
plot(meanNrCountries)
plot(mdNrCountries)
max(df$nrAuthors)
# number of countries total in a given year
dfCountriesPerYear <- data.frame(
#year = yearFrom:yearTo
year = 1964:yearTo
)
for (i in 1:length(dfCountriesPerYear$year)){
dfCountriesPerYear$nrCountries[i] <- length(unique(unlist(str_split(df$AU_CO[df$PY == dfCountriesPerYear$year[i]], ";"))))
}
plot(dfCountriesPerYear)
ggplot(data = dfCountriesPerYear, aes(x = year, group = year, y = nrCountries)) +
#geom_boxplot(outlier.size = 0, color = "black", alpha = 0) +
geom_count(color = "gray50", alpha = .50) +
stat_summary(aes(x = year, y = nrCountries), geom = "crossbar", fun = "median", color = "darkblue") +
stat_summary(aes(x = year, y = nrCountries), geom = "point", fun = "mean", color = "darkred") +
geom_hline(yintercept = 27.5, linetype = "dashed") +
scale_x_continuous(name = "Year of Publication", breaks = seq(1970,2020,10)) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30,5), labels = c(0,5,10,15,20,25,83), name = "Number of Authors") +
theme_classic()
for (i in 1:length(dfCountriesPerYear$year)){
dfCountriesPerYear$nrCountries[i] <- length(unique(unlist(str_split(df$AU_CO[df$PY == dfCountriesPerYear$year[i]], ";"))))
dfCountriesPerYear$nrCountriesCumulated[i] <- length(unique(unlist(str_split(df$AU_CO[df$PY <= dfCountriesPerYear$year[i]], ";"))))
}
plot(dfCountriesPerYear[,1:2])
plot(dfCountriesPerYear[,c(1,3)])
collabNetwork <- biblioNetwork(df, analysis = "collaboration", network = "countries", sep = ";")
networkStat(collabNetwork)
networkPlot(collabNetwork)
?networkPlot
networkPlot(collabNetwork, type = "circle")
networkPlot(collabNetwork, type = "sphere")
networkPlot(collabNetwork, type = "mds")
networkPlot(collabNetwork, type = "fruchtermann")
networkPlot(collabNetwork, type = "fruchtermann")
networkPlot(collabNetwork, type = "kamada")
networkPlot(collabNetwork, type = "auto")
networkPlot(collabNetwork, type = "circle", size = TRUE)
?collabNetwork
?biblioNetwork
collabNetwork <- biblioNetwork(df, analysis = "collaboration", network = "countries", sep = ";", n = 10)
networkPlot(collabNetwork, type = "circle", size = TRUE)
?networkPlot
networkPlot(collabNetwork, type = "circle", size = TRUE, weighted = TRUE)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE)
collabNetwork <- biblioNetwork(df, analysis = "collaboration", network = "countries", sep = ";", n = 20)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE)
collabNetwork <- biblioNetwork(df, analysis = "collaboration", network = "countries", sep = ";", n = 15)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, weighted= TRUE)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, cex.size = TRUE)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, size.cex = TRUE)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, edgesize = TRUE)
networkPlot(collabNetwork, type = "auto", size = TRUE, remove.multiple = FALSE, edgesize = TRUE)
networkPlot(collabNetwork, type = "auto", size = TRUE, remove.multiple = FALSE, edges.min = 5)
networkPlot(collabNetwork, type = "auto", size = TRUE, remove.multiple = FALSE, edges.min = 10)
networkPlot(collabNetwork, type = "auto", size = TRUE, remove.multiple = FALSE, edges.min = 20)
networkPlot(collabNetwork, type = "auto", size = TRUE, remove.multiple = FALSE, edges.min = 10)
collabNetwork <- biblioNetwork(df, analysis = "collaboration", network = "countries", sep = ";", n = 10)
networkPlot(collabNetwork, type = "auto", size = TRUE, remove.multiple = FALSE, edges.min = 10)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 20)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 10)
collabNetwork <- biblioNetwork(df, analysis = "collaboration", network = "countries", sep = ";", n = 20)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 10)
collabNetwork <- biblioNetwork(df, analysis = "collaboration", network = "countries", sep = ";", n = 15)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 10)
collabNetworkAll <- biblioNetwork(df, analysis = "collaboration", network = "countries", sep = ";")
networkPlot(collabNetworkAll, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 10)
networkPlot(collabNetworkAll, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 5)
networkPlot(collabNetworkAll, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 1)
networkPlot(collabNetworkAll, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 3)
networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 10)
collabPlot <- last_plot()
View(collabPlot)
collabPlot + theme_classic()
collabPlot <- networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 10)
collabPlot + theme_classic()
collabPlot + theme_classic()
collabPlot <- networkPlot(collabNetwork, type = "circle", size = TRUE, remove.multiple = FALSE, edges.min = 10)
collabPlot + theme_classic()
collabPlot
View(collabPlot)
collabPlot[["params"]][["params"]]
collabPlot <- networkPlot(collabNetwork, type = "circle", size = TRUE,
remove.multiple = FALSE, edges.min = 10, Title = "")
collabPlot
collabPlot <- networkPlot(collabNetwork, type = "circle", size = TRUE,
remove.multiple = FALSE, edges.min = 10, Title = "")
collabPlot
collabNetwork <- biblioNetwork(df, analysis = "collaboration", network = "countries", sep = ";", n = 15)
collabPlot <- networkPlot(collabNetwork, type = "circle", size = TRUE,
remove.multiple = FALSE, edges.min = 10, Title = "")
# save the plot
ggsave(paste0(parentFolder, "/plots/internationalCollabs_top15_min10.pdf"), collabPlot,
width = 20, height = 20, units = "cm")
# save the plot
ggsave(paste0(parentFolder, "/plots/internationalCollabs_top15_min10.pdf"), collabPlot,
width = 20, height = 20, units = "cm")
# save the plot
pdf(file = paste0(parentFolder, "/plots/internationalCollabs_top15_min10.pdf"))
collabPlot
dev.off()
?png
?pdf
# save the plot
pdf(paste0(parentFolder, "/plots/internationalCollabs_top15_min10.pdf"),
width = 20, height = 20, units = "cm")
# save the plot
pdf(paste0(parentFolder, "/plots/internationalCollabs_top15_min10.pdf"),
width = 20/2.54, height = 20/2.54)
collabPlot
dev.off()
png(paste0(parentFolder, "/plots/internationalCollabs_top15_min10.pdf"),
width = 20, height = 20, units = "cm")
png(paste0(parentFolder, "/plots/internationalCollabs_top15_min10.pdf"),
width = 20, height = 20, units = "cm", res = 600)
collabPlot
dev.off()
png(paste0(parentFolder, "/plots/internationalCollabs_top15_min10.png"),
width = 20, height = 20, units = "cm", res = 600)
collabPlot
dev.off()
png(paste0(parentFolder, "/plots/internationalCollabs_top15_min10.png"),
width = 20, height = 20, units = "cm", res = 600)
plot(collabPlot)
dev.off()
library(igraph)
write_graph(collabPlot, "test.png")
collabPlotAll <- networkPlot(collabNetworkAll, type = "circle", size = TRUE,
remove.multiple = FALSE, edges.min = 3, Title = "")
bibliometrix::KeywordGrowth(df, Tag = "AU_CO")
bibliometrix::KeywordGrowth(df, Tag = "AU_CO", top = 15)
countryByYear <- KeywordGrowth(df, Tag = "AU_CO", top = 15)
countryByYear
countryByYear[,2:16] <- apply(rbind(rep(0,15), countryByYear[,2:16]), 1, diff)
diff(countryByYear[,2:16])
(countryByYear[,2:16])
?diff
?apply(array, margin, ...)
apply(rbind(rep(0,15), countryByYear[,2:16]), 1, diff)
rbind(rep(0,15), countryByYear[,2:16])
apply(rbind(rep(0,15), countryByYear[,2:16]), 2, diff)
countryByYear <- countryByYearCumulated
countryByYearCumulated <- KeywordGrowth(df, Tag = "AU_CO", top = 15)
countryByYear <- countryByYearCumulated
countryByYear[,2:16] <- apply(rbind(rep(0,15), countryByYear[,2:16]), 2, diff)
plot)countryByYear
plot(countryByYear)
?pivot_longer
countryByYear <- pivot_longer(countryByYear, names_to = "country", values_to = "publications")
countryByYear <- pivot_longer(countryByYear, cols = USA:BELGIUM, names_to = "country", values_to = "publications")
countryByYear
View(countryByYear)
timecoursePlot <- ggplot(countryByYear, aes(x = Year, y = publications, group = country)) +
theme_classic() +
geom_line(); timecoursePlot
timecoursePlot <- ggplot(countryByYear, aes(x = Year, y = publications, color = country)) +
theme_classic() +
geom_line(); timecoursePlot
timecoursePlot
?scale_colour_brewer
timecoursePlot <- ggplot(countryByYear, aes(x = Year, y = publications, color = country)) +
theme_classic() +
geom_line() +
scale_color_brewer(type = "qual"); timecoursePlot
timecoursePlot <- ggplot(countryByYear, aes(x = Year, y = publications, color = country)) +
theme_classic() +
geom_line() +
scale_color_brewer(type = "qual", palette = 2); timecoursePlot
RColorBrewer::display.brewer.pal()
RColorBrewer::display.brewer.pal()
RColorBrewer::display.brewer.all()
timecoursePlot <- ggplot(countryByYear, aes(x = Year, y = publications, color = country)) +
theme_classic() +
geom_line() +
scale_color_brewer(type = "qual", palette = "Paired"); timecoursePlot
timecoursePlot
coutries2plot <- 10
countryByYearCumulated <- KeywordGrowth(df, Tag = "AU_CO", top = countries2plot)
countries2plot <- 10
countryByYearCumulated <- KeywordGrowth(df, Tag = "AU_CO", top = countries2plot)
countryByYear <- countryByYearCumulated
countryByYear[,2:(countries2plot+1)] <- apply(rbind(rep(0,countries2plot), countryByYear[,2:(countries2plot+1)]), 2, diff)
countryByYear <- pivot_longer(countryByYear, cols = USA:BELGIUM, names_to = "country", values_to = "publications")
timecoursePlot <- ggplot(countryByYear, aes(x = Year, y = publications, color = country)) +
theme_classic() +
geom_line() +
scale_color_brewer(type = "qual", palette = "Paired"); timecoursePlot
countryByYear <- pivot_longer(countryByYear, cols = 2:11, names_to = "country", values_to = "publications")
countryByYear
timecoursePlot <- ggplot(countryByYear, aes(x = Year, y = publications, color = country)) +
theme_classic() +
geom_line() +
scale_color_brewer(type = "qual", palette = "Paired"); timecoursePlot
